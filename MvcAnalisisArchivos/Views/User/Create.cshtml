@model MvcAnalisisArchivos.Models.DTO.UserDTO

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<h2>Create new user</h2>
<div>
    <h2>Usual way</h2>
    <form action="/User/Create" method="post" class="form">
        <div class="form-group">
            <label for="Name">Name:</label>
            <input type="text" name="Name" id="Name" class="form-control" />
        </div>

        <div class="form-group">
            <label for="Email">Email:</label>
            <input type="text" name="Email" id="Email" class="form-control" />
        </div>

        <div class="form-group">
            <label for="Code">Code:</label>
            <input type="text" name="Code" id="Code" class="form-control" />
        </div>

        <div class="form-group">
            <label for="AttemptsAllowed">AttemptsAllowed:</label>
            <input type="text" name="AttemptsAllowed" id="AttemptsAllowed" class="form-control" />
        </div>

        <div class="form-group">
            <label for="Balance">Balance:</label>
            <input type="text" name="Balance" id="Balance" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Save</button>

    </form>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttemptsAllowed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AttemptsAllowed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttemptsAllowed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
